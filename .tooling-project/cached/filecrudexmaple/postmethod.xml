<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<sub-flow name="postSubFlow" doc:id="a1288399-00f1-4e05-b940-6f63b67493bc" >
		<set-variable variableName="data" value="#[output application/json
---
payload]" doc:name="data" />
		<choice doc:name="First validation" doc:id="d0a56218-ae75-45d2-bc4d-5a73186734f9" >
			<when expression="#[vars.data is Array]">
				<set-variable value="#[vars.data as Array]" doc:name="newCars" doc:id="144c49fc-1211-4902-8de3-038a04a6d8e0" variableName="newCars"/>
			</when>
			<when expression="#[vars.data is Object]">
				<set-variable value="#[[vars.data as Object]]" doc:name="newCars" doc:id="5f136b9a-8291-4446-b1cd-f188ba42ed9e" variableName="newCars"/>
			</when>
			<otherwise >
				<raise-error doc:name="Raise error" doc:id="130db739-0e8a-40a4-bdb5-b55f6c91d332" type="VALIDATION:INVALID_PAYLOAD" description="The payload has to be an array or an object."/>
			</otherwise>
		</choice>
		<file:read doc:name="Read" doc:id="992532cf-a6d1-46eb-9830-435ad75b3989" path="#[p('app.json_file_path')]" config-ref="File_Config"/>
		<set-variable value="#[%dw 2.0
import modules::PostMethod
output application/json
---
PostMethod::getInvalidCars(vars.newCars)]" doc:name="invalidCars" doc:id="6d4a1654-bbd0-4266-aab1-3d9e4e4c3b17" variableName="invalidCars"/>
		<set-variable value="#[%dw 2.0
import modules::PostMethod
output application/json
---
PostMethod::getExistingIds(vars.newCars, payload as Array)]" doc:name="existingIds" doc:id="6229ced8-03de-46b0-8d7c-ab7f1353476c" variableName="existingIds" />
		<choice doc:name="Second validation" doc:id="a5d41595-fe61-43bb-be13-0ef39f1b3ed9">
			<when expression="#[vars.existingIds != []]">
				<raise-error doc:name="Raise error" doc:id="65c6368d-7ffa-4653-b38b-5310ff8984c6" type="VALIDATION:ID_ALREADY_EXISTS" description='#["Items with these ids already exist: [" ++ (vars.existingIds joinBy ", ") ++ "]"]' />
			</when>
			<when expression="#[vars.invalidCars != []]">
				<raise-error doc:name="Raise error" doc:id="8b3c1baa-323f-4a37-b428-680f1be969cc" type="VALIDATION:INVALID_PAYLOAD" description='#["These items have wrong keys or its types: [" ++ (vars.invalidCars map ((car) -&gt; write(car, "application/json")) joinBy ", ") ++ "]"]' />
			</when>
		</choice>
		<file:write doc:name="Write" doc:id="4dfecf9e-f1d4-4482-aa31-6f9b82b8c7f9" path="#[p('app.json_file_path')]" config-ref="File_Config">
			<file:content ><![CDATA[#[output application/json
---
payload as Array ++ vars.newCars]]]></file:content>
		</file:write>
		<set-payload value="#[output application/json
---
vars.newCars]" doc:name="Set Payload" doc:id="b68b5bf3-ea3f-4440-b76a-5cc7b29720c6" />
	</sub-flow>
	
</mule>
